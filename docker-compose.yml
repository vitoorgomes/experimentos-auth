version: "3"
services:
  gateway:
    build: ./gateway
    restart: always
    hostname: gateway
    env_file:
      - .env
    ports:
      - "8000:8000"
    networks:
      - backend
      - frontend
  task:
    build: ./task
    restart: always
    hostname: task
    env_file:
      - .env
    networks:
      - backend
    links:
      - dbtask
  token:
    build: ./token
    restart: always
    hostname: token
    env_file:
      - .env
    networks:
      - backend
    links:
      - dbuser
  user:
    build: ./user
    restart: always
    hostname: user
    env_file:
      - .env
    networks:
      - backend
    links:
      - dbuser
  dbuser:
    image: "mongo:3.7"
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_ROOT_USER}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_ROOT_PASSWORD}
      MONGO_INITDB_DATABASE: ${MONGO_DATABASE_USER}
      MONGO_USER: ${MONGO_USER}
      MONGO_PASSWORD: ${MONGO_PASSWORD}
    volumes:
      - "./db/user/data/db-files:/data/db"
      - "./db/user/init/:/docker-entrypoint-initdb.d/"
    ports:
      - 27017:27017
    networks:
      - backend

  dbtask:
    image: "mongo:3.7"
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_ROOT_USER}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_ROOT_PASSWORD}
      MONGO_INITDB_DATABASE: ${MONGO_DATABASE_TASKS}
      MONGO_USER: ${MONGO_USER}
      MONGO_PASSWORD: ${MONGO_PASSWORD}
    volumes:
      - "./db/tasks/data/db-files:/data/db"
      - "./db/tasks/init/:/docker-entrypoint-initdb.d/"
    ports:
      - 27018:27018
    command: mongod --port 27018
    networks:
      - backend

networks:
  backend:
    driver: bridge
  frontend:
    external:
      name: infrastructure
